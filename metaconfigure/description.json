{
  "configure files": [
    "src/cmake/config.cmake.in",
    "src/benchmarks/thirdparty/benchmark/cmake/Config.cmake.in",
    "src/benchmarks/thirdparty/benchmark/cmake/benchmark.pc.in"
  ],
  "file extension": {
    "configure files": [
      "in"
    ],
    "header files": [
      "h++",
      "hxx",
      "hpp",
      "hh",
      "h"
    ],
    "implementation files": [
      "c++",
      "cxx",
      "cpp",
      "cc",
      "C"
    ]
  },
  "header files": [
    "src/include/nlohmann/json.hpp",
    "src/include/nlohmann/adl_serializer.hpp",
    "src/include/nlohmann/json_fwd.hpp",
    "src/include/nlohmann/detail/json_ref.hpp",
    "src/include/nlohmann/detail/value_t.hpp",
    "src/include/nlohmann/detail/macro_scope.hpp",
    "src/include/nlohmann/detail/json_pointer.hpp",
    "src/include/nlohmann/detail/exceptions.hpp",
    "src/include/nlohmann/detail/macro_unscope.hpp",
    "src/include/nlohmann/detail/conversions/to_chars.hpp",
    "src/include/nlohmann/detail/conversions/from_json.hpp",
    "src/include/nlohmann/detail/conversions/to_json.hpp",
    "src/include/nlohmann/detail/input/position_t.hpp",
    "src/include/nlohmann/detail/input/parser.hpp",
    "src/include/nlohmann/detail/input/json_sax.hpp",
    "src/include/nlohmann/detail/input/binary_reader.hpp",
    "src/include/nlohmann/detail/input/input_adapters.hpp",
    "src/include/nlohmann/detail/input/lexer.hpp",
    "src/include/nlohmann/detail/output/output_adapters.hpp",
    "src/include/nlohmann/detail/output/serializer.hpp",
    "src/include/nlohmann/detail/output/binary_writer.hpp",
    "src/include/nlohmann/detail/meta/is_sax.hpp",
    "src/include/nlohmann/detail/meta/type_traits.hpp",
    "src/include/nlohmann/detail/meta/cpp_future.hpp",
    "src/include/nlohmann/detail/meta/detected.hpp",
    "src/include/nlohmann/detail/meta/void_t.hpp",
    "src/include/nlohmann/detail/iterators/iter_impl.hpp",
    "src/include/nlohmann/detail/iterators/json_reverse_iterator.hpp",
    "src/include/nlohmann/detail/iterators/iteration_proxy.hpp",
    "src/include/nlohmann/detail/iterators/iterator_traits.hpp",
    "src/include/nlohmann/detail/iterators/internal_iterator.hpp",
    "src/include/nlohmann/detail/iterators/primitive_iterator.hpp",
    "src/include/nlohmann/thirdparty/hedley/hedley.hpp",
    "src/include/nlohmann/thirdparty/hedley/hedley_undef.hpp",
    "src/benchmarks/thirdparty/benchmark/include/benchmark/benchmark.h",
    "src/benchmarks/thirdparty/benchmark/src/timers.h",
    "src/benchmarks/thirdparty/benchmark/src/benchmark_register.h",
    "src/benchmarks/thirdparty/benchmark/src/sleep.h",
    "src/benchmarks/thirdparty/benchmark/src/thread_timer.h",
    "src/benchmarks/thirdparty/benchmark/src/complexity.h",
    "src/benchmarks/thirdparty/benchmark/src/colorprint.h",
    "src/benchmarks/thirdparty/benchmark/src/counter.h",
    "src/benchmarks/thirdparty/benchmark/src/thread_manager.h",
    "src/benchmarks/thirdparty/benchmark/src/string_util.h",
    "src/benchmarks/thirdparty/benchmark/src/re.h",
    "src/benchmarks/thirdparty/benchmark/src/arraysize.h",
    "src/benchmarks/thirdparty/benchmark/src/commandlineflags.h",
    "src/benchmarks/thirdparty/benchmark/src/internal_macros.h",
    "src/benchmarks/thirdparty/benchmark/src/cycleclock.h",
    "src/benchmarks/thirdparty/benchmark/src/log.h",
    "src/benchmarks/thirdparty/benchmark/src/check.h",
    "src/benchmarks/thirdparty/benchmark/src/statistics.h",
    "src/benchmarks/thirdparty/benchmark/src/benchmark_api_internal.h",
    "src/benchmarks/thirdparty/benchmark/src/mutex.h",
    "src/single_include/nlohmann/json.hpp"
  ],
  "ignore pattern": "$^",
  "implementation files": [
    "src/benchmarks/thirdparty/benchmark/cmake/posix_regex.cpp",
    "src/benchmarks/thirdparty/benchmark/cmake/thread_safety_attributes.cpp",
    "src/benchmarks/thirdparty/benchmark/cmake/std_regex.cpp",
    "src/benchmarks/thirdparty/benchmark/cmake/steady_clock.cpp",
    "src/benchmarks/thirdparty/benchmark/cmake/gnu_posix_regex.cpp",
    "src/benchmarks/thirdparty/benchmark/src/timers.cc",
    "src/benchmarks/thirdparty/benchmark/src/commandlineflags.cc",
    "src/benchmarks/thirdparty/benchmark/src/statistics.cc",
    "src/benchmarks/thirdparty/benchmark/src/console_reporter.cc",
    "src/benchmarks/thirdparty/benchmark/src/benchmark_register.cc",
    "src/benchmarks/thirdparty/benchmark/src/counter.cc",
    "src/benchmarks/thirdparty/benchmark/src/sleep.cc",
    "src/benchmarks/thirdparty/benchmark/src/sysinfo.cc",
    "src/benchmarks/thirdparty/benchmark/src/csv_reporter.cc",
    "src/benchmarks/thirdparty/benchmark/src/benchmark_main.cc",
    "src/benchmarks/thirdparty/benchmark/src/complexity.cc",
    "src/benchmarks/thirdparty/benchmark/src/json_reporter.cc",
    "src/benchmarks/thirdparty/benchmark/src/reporter.cc",
    "src/benchmarks/thirdparty/benchmark/src/colorprint.cc",
    "src/benchmarks/thirdparty/benchmark/src/string_util.cc",
    "src/benchmarks/thirdparty/benchmark/src/benchmark.cc",
    "src/benchmarks/src/benchmarks.cpp",
    "src/doc/examples/flatten.cpp",
    "src/doc/examples/swap__reference.cpp",
    "src/doc/examples/at__object_t_key_type.cpp",
    "src/doc/examples/json_pointer__to_string.cpp",
    "src/doc/examples/operatorjson_pointer_const.cpp",
    "src/doc/examples/operator__equal__nullptr_t.cpp",
    "src/doc/examples/insert__range.cpp",
    "src/doc/examples/begin.cpp",
    "src/doc/examples/basic_json__value_ptr.cpp",
    "src/doc/examples/crend.cpp",
    "src/doc/examples/operator_deserialize.cpp",
    "src/doc/examples/basic_json__value.cpp",
    "src/doc/examples/README.cpp",
    "src/doc/examples/get_ptr.cpp",
    "src/doc/examples/parse__array__parser_callback_t.cpp",
    "src/doc/examples/swap__string_t.cpp",
    "src/doc/examples/cbegin.cpp",
    "src/doc/examples/front.cpp",
    "src/doc/examples/operator__notequal.cpp",
    "src/doc/examples/back.cpp",
    "src/doc/examples/operator__ValueType.cpp",
    "src/doc/examples/json_pointer__operator_add_binary.cpp",
    "src/doc/examples/contains.cpp",
    "src/doc/examples/operatorarray__size_type.cpp",
    "src/doc/examples/exception.cpp",
    "src/doc/examples/parse__contiguouscontainer__parser_callback_t.cpp",
    "src/doc/examples/operator__greaterequal.cpp",
    "src/doc/examples/operator_serialize.cpp",
    "src/doc/examples/swap__object_t.cpp",
    "src/doc/examples/json_pointer__back.cpp",
    "src/doc/examples/erase__size_type.cpp",
    "src/doc/examples/is_string.cpp",
    "src/doc/examples/patch.cpp",
    "src/doc/examples/get_to.cpp",
    "src/doc/examples/basic_json__list_init_t.cpp",
    "src/doc/examples/push_back.cpp",
    "src/doc/examples/other_error.cpp",
    "src/doc/examples/to_msgpack.cpp",
    "src/doc/examples/operatorarray__size_type_const.cpp",
    "src/doc/examples/object.cpp",
    "src/doc/examples/to_bson.cpp",
    "src/doc/examples/json_pointer__parent_pointer.cpp",
    "src/doc/examples/is_number_unsigned.cpp",
    "src/doc/examples/is_boolean.cpp",
    "src/doc/examples/cend.cpp",
    "src/doc/examples/to_ubjson.cpp",
    "src/doc/examples/basic_json__basic_json.cpp",
    "src/doc/examples/insert__ilist.cpp",
    "src/doc/examples/emplace.cpp",
    "src/doc/examples/max_size.cpp",
    "src/doc/examples/erase__key_type.cpp",
    "src/doc/examples/from_cbor.cpp",
    "src/doc/examples/emplace_back.cpp",
    "src/doc/examples/basic_json__size_type_basic_json.cpp",
    "src/doc/examples/operatorarray__key_type_const.cpp",
    "src/doc/examples/from_ubjson.cpp",
    "src/doc/examples/count.cpp",
    "src/doc/examples/is_object.cpp",
    "src/doc/examples/insert__count.cpp",
    "src/doc/examples/operatorarray__key_type.cpp",
    "src/doc/examples/at_json_pointer.cpp",
    "src/doc/examples/json_pointer__push_back.cpp",
    "src/doc/examples/array.cpp",
    "src/doc/examples/from_msgpack.cpp",
    "src/doc/examples/parse__istream__parser_callback_t.cpp",
    "src/doc/examples/operator__value_t.cpp",
    "src/doc/examples/is_primitive.cpp",
    "src/doc/examples/operator__greater.cpp",
    "src/doc/examples/operatorjson_pointer.cpp",
    "src/doc/examples/at__size_type_const.cpp",
    "src/doc/examples/invalid_iterator.cpp",
    "src/doc/examples/clear.cpp",
    "src/doc/examples/empty.cpp",
    "src/doc/examples/is_array.cpp",
    "src/doc/examples/crbegin.cpp",
    "src/doc/examples/json_pointer__pop_back.cpp",
    "src/doc/examples/rend.cpp",
    "src/doc/examples/is_number_integer.cpp",
    "src/doc/examples/iterator_wrapper.cpp",
    "src/doc/examples/json_pointer__operator_add.cpp",
    "src/doc/examples/end.cpp",
    "src/doc/examples/parse__string__parser_callback_t.cpp",
    "src/doc/examples/at__size_type.cpp",
    "src/doc/examples/get__PointerType.cpp",
    "src/doc/examples/at_json_pointer_const.cpp",
    "src/doc/examples/unflatten.cpp",
    "src/doc/examples/meta.cpp",
    "src/doc/examples/find__key_type.cpp",
    "src/doc/examples/get_ref.cpp",
    "src/doc/examples/basic_json__CompatibleType.cpp",
    "src/doc/examples/basic_json__moveconstructor.cpp",
    "src/doc/examples/is_discarded.cpp",
    "src/doc/examples/json_pointer.cpp",
    "src/doc/examples/basic_json__copyassignment.cpp",
    "src/doc/examples/swap__array_t.cpp",
    "src/doc/examples/operator__less.cpp",
    "src/doc/examples/json_pointer__empty.cpp",
    "src/doc/examples/is_structured.cpp",
    "src/doc/examples/operator__equal.cpp",
    "src/doc/examples/update__range.cpp",
    "src/doc/examples/merge_patch.cpp",
    "src/doc/examples/is_number_float.cpp",
    "src/doc/examples/push_back__object_t__value.cpp",
    "src/doc/examples/to_cbor.cpp",
    "src/doc/examples/update.cpp",
    "src/doc/examples/items.cpp",
    "src/doc/examples/basic_json__value_t.cpp",
    "src/doc/examples/basic_json__InputIt_InputIt.cpp",
    "src/doc/examples/operator__lessequal.cpp",
    "src/doc/examples/rbegin.cpp",
    "src/doc/examples/at__object_t_key_type_const.cpp",
    "src/doc/examples/parse_error.cpp",
    "src/doc/examples/sax_parse.cpp",
    "src/doc/examples/insert.cpp",
    "src/doc/examples/erase__IteratorType_IteratorType.cpp",
    "src/doc/examples/is_number.cpp",
    "src/doc/examples/contains_json_pointer.cpp",
    "src/doc/examples/push_back__initializer_list.cpp",
    "src/doc/examples/operator__notequal__nullptr_t.cpp",
    "src/doc/examples/parse__iteratortype__parser_callback_t.cpp",
    "src/doc/examples/get__ValueType_const.cpp",
    "src/doc/examples/is_null.cpp",
    "src/doc/examples/dump.cpp",
    "src/doc/examples/basic_json__nullptr_t.cpp",
    "src/doc/examples/diff.cpp",
    "src/doc/examples/type_error.cpp",
    "src/doc/examples/from_bson.cpp",
    "src/doc/examples/type.cpp",
    "src/doc/examples/insert__range_object.cpp",
    "src/doc/examples/size.cpp",
    "src/doc/examples/erase__IteratorType.cpp",
    "src/doc/examples/out_of_range.cpp",
    "src/doc/examples/type_name.cpp"
  ],
  "include path": "src/",
  "initialized": true,
  "is external project": true,
  "language": "c++",
  "name": "json-adapter",
  "standard": "c++17",
  "standards": [
    "c++98",
    "c++11",
    "c++14",
    "c++17"
  ],
  "strict": true,
  "test pattern": "test$",
  "tests": {
    "json-adapter": []
  },
  "update": false
}